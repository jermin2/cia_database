<?php
/* 
 * Generated by CRUDigniter v3.2 
 * www.crudigniter.com
 */
 
class Person extends MY_Controller{
    function __construct()
    {
        parent::__construct();
        $this->load->model('Person_model');
    } 

    /*
     * Listing of people
     */
    function index()
    {
        $data['people'] = $this->Person_model->get_all_people();
        
        $data['_view'] = 'person/index';
        $this->load->view('mainpage',$data);
    }

    /*
     * Adding a new person
     */
    function add()
    {   
        if(isset($_POST) && count($_POST) > 0)     
        {   
            $params = array(
				'age_group_id' => $this->input->post('age_group_id'),
				'hall' => $this->input->post('hall'),
				'first_name' => $this->input->post('first_name'),
				'last_name' => $this->input->post('last_name'),
				'gender' => $this->input->post('gender'),
				'dob' => $this->input->post('dob'),
				'email' => $this->input->post('email'),
				'mobile' => $this->input->post('mobile'),
				'address' => $this->input->post('address'),
            );
            
            $person_id = $this->Person_model->add_person($params);
            redirect('person/index');
        }
        else
        {
			$this->load->model('Age_group_model');
			$data['all_age_groups'] = $this->Age_group_model->get_all_age_groups();

			$this->load->model('Hall_model');
			$data['all_halls'] = $this->Hall_model->get_all_halls();
            
            $data['_view'] = 'person/add';
            $this->load->view('mainpage',$data);
        }
    }  

    /*
     * Editing a person
     */
    function edit($people_id)
    {   
        // check if the person exists before trying to edit it
        $data['person'] = $this->Person_model->get_person($people_id);
        
        if(isset($data['person']['people_id']))
        {
            if(isset($_POST) && count($_POST) > 0)     
            {   
                $params = array(
					'age_group_id' => $this->input->post('age_group_id'),
					'hall' => $this->input->post('hall'),
					'first_name' => $this->input->post('first_name'),
					'last_name' => $this->input->post('last_name'),
					'gender' => $this->input->post('gender'),
					'dob' => $this->input->post('dob'),
					'email' => $this->input->post('email'),
					'mobile' => $this->input->post('mobile'),
					'address' => $this->input->post('address'),
                );

                $this->Person_model->update_person($people_id,$params);            
                redirect('person/index');
            }
            else
            {
				$this->load->model('Age_group_model');
				$data['all_age_groups'] = $this->Age_group_model->get_all_age_groups();

				$this->load->model('Hall_model');
				$data['all_halls'] = $this->Hall_model->get_all_halls();

                $data['_view'] = 'person/edit';
                $this->load->view('mainpage',$data);
            }
        }
        else
            show_error('The person you are trying to edit does not exist.');
    } 

    /*
     * Deleting person
     */
    function remove($people_id)
    {
        $person = $this->Person_model->get_person($people_id);

        // check if the person exists before trying to delete it
        if(isset($person['people_id']))
        {
            $this->Person_model->delete_person($people_id);
            redirect('person/index');
        }
        else
            show_error('The person you are trying to delete does not exist.');
    }
    
}
